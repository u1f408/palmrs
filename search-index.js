var searchIndex = JSON.parse('{\
"palmrs":{"doc":"A collection of libraries and command-line utilities for …","t":"CC","n":["database","sync"],"q":[[0,"palmrs"]],"d":["",""],"i":[0,0],"f":[0,0],"c":[],"p":[]},\
"palmrs_conduit_todotxt":{"doc":"palmrs-conduit-todotxt: Palm OS “Tasks” app &lt;-&gt; …","t":"DLLLMLLMFMLLLLFMFMMLLLL","n":["ToDoTask","as_todotxt_entry","borrow","borrow_mut","category","clone","clone_into","completed","device_database_parse","due_date","eq","fmt","from","into","main","note_text","palm_to_todotxt","priority","task_text","to_owned","try_from","try_into","type_id"],"q":[[0,"palmrs_conduit_todotxt"]],"d":["A single to-do task","Return this task as a <code>todo.txt</code> formatted String","","","Category name","","","Has the task been completed?","Parse tasks out of a <code>ToDoDB</code> database","Task due date, if defined, as a <code>(year, month, day)</code> tuple","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Main entrypoint","Extended task note text","Perform a one-way conversion from the Palm OS <code>ToDoDB</code> to …","Task priority (between 1 and 5)","Task body","","","",""],"i":[0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,0,1,1,1,1,1,1],"f":[0,[1,2],[[]],[[]],0,[1,1],[[]],0,[3,[[6,[[4,[1]],5]]]],0,[[1,1],7],[[1,8],9],[[]],[[]],[[],[[6,[5]]]],0,[10,[[6,[5]]]],0,0,[[]],[[],6],[[],6],[[],11]],"c":[],"p":[[3,"ToDoTask"],[3,"String"],[3,"Path"],[3,"Vec"],[3,"Report"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"WithinConduit"],[3,"TypeId"]]},\
"palmrs_database":{"doc":"Support for reading, and eventually writing, the Palm OS …","t":"QIDDDDQSMLLLLLLLLLLLLLLLLLLAMALLLLLLKLLLLAALLLLLLLLLLLLLLLRDSMMMLLLLMMLLLLLLLMMMLLMMMLLLLLMLLMMIDSLLALLKLLLLLKLLKLLLLLDDLLLLMMLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLIKKKKKKAKKKENDNLLLLLMMLLLLLLLLMMLLLLLLLLLLLLMLLLLLLLLLLMMMMMMMMDRLLLLLLLLLLLFFLLLLLLF","n":["AppInfoRecord","DatabaseFormat","PalmDatabase","PdbDatabase","PdbWithCategoriesDatabase","PrcDatabase","RecordHeader","USES_COMPAT_PADDING","app_info","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","eq","fmt","fmt","from","from","from","from","from_bytes","header","header","info","insert_record","insert_resource","into","into","into","into","is_valid","is_valid","is_valid","is_valid","list_records_resources","record","time","to_bytes","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","DATABASE_HEADER_LENGTH","DatabaseHeader","SIZE","app_info_id","attributes","backup_time","borrow","borrow_mut","clone","clone_into","creation_time","creator_code","creator_code_try_str","eq","fmt","fmt","from","from_bytes","into","modification_number","modification_time","name","name_trimmed","name_try_str","next_record_list","record_count","sort_info_id","to_bytes","to_owned","to_string","try_from","try_into","type_code","type_code_try_str","type_id","unique_id_seed","version","ExtraInfoRecord","NullExtraInfo","SIZE","borrow","borrow_mut","category","clone","clone_into","data_empty","data_empty","data_item_categories","eq","fmt","from","from_bytes","from_bytes","into","to_bytes","to_bytes","to_owned","try_from","try_into","type_id","AppInfoCategories","ExtraInfoCategory","borrow","borrow","borrow_mut","borrow_mut","categories","category_id","clone","clone","clone_into","clone_into","data_empty","data_item_categories","default","eq","eq","fmt","fmt","from","from","from_bytes","from_bytes","into","into","name","name_try_str","renamed","renamed_categories","to_bytes","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","DatabaseRecord","attributes","construct_record","construct_resource","data_len","from_bytes","name_str","pdb_record","resource_id","to_bytes","unique_id","PdbRecordHeader","Record","RecordAttributes","Resource","attributes","borrow","borrow","borrow_mut","borrow_mut","busy","category","clone","clone","clone_into","clone_into","construct_record","construct_resource","data_len","default","delete","dirty","eq","eq","fmt","fmt","from","from","from","from_bytes","into","into","name_str","resource_id","secret","to_bytes","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unique_id","attributes","data_len","data_len","data_offset","data_offset","name","record_id","unique_id","PalmTimestamp","SECONDS_BETWEEN_PALM_EPOCHS","as_unix_ts","borrow","borrow_mut","clone","clone_into","default","eq","fmt","fmt","from","into","is_palm_epoch","palm_ts_to_unix_ts","strftime","to_owned","to_string","try_from","try_into","type_id","unix_ts_to_palm_ts"],"q":[[0,"palmrs_database"],[58,"palmrs_database::header"],[95,"palmrs_database::info"],[118,"palmrs_database::info::category"],[156,"palmrs_database::record"],[167,"palmrs_database::record::pdb_record"],[211,"palmrs_database::record::pdb_record::PdbRecordHeader"],[219,"palmrs_database::time"]],"d":["The type of the app info record","Helper trait for database format types","A representation of a Palm OS database file","Implementation of <code>DatabaseFormat</code> for PDB databases","Implementation of <code>DatabaseFormat</code> for PDB databases that …","Implementation of <code>DatabaseFormat</code> for PRC databases","The record header type for this database format","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","The common file header used by both the PRC and PDB …","","App info &amp; sort info parsers and helpers","Create a new record in the database, returning the ID of …","Create a new resource in the database, returning the ID of …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether the database is valid as this database …","","","","","Individual database record handling","<code>PalmTimestamp</code> type &amp; conversion methods","","","","","","","","","","","","","","","","Length, in bytes, of the <code>DatabaseHeader</code>","The common file header used by both the PRC and PDB …","","","","","","","","","","","Attempt to convert the database creator code to a <code>str</code>","","","","Returns the argument unchanged.","Read the database header from the given byte slice.","Calls <code>U::from(self)</code>.","","","","Return the friendly name of the database as a byte slice, …","Attempt to convert the friendly name of the database to a …","","","","","","","","","","Attempt to convert the database type code to a <code>str</code>","","","","Helper trait for decoding &amp; encoding “extra data” …","Null implementation of <code>ExtraInfoRecord</code>","Size in bytes (packed) which the ExtraInfoRecord occupies …","","","Item category record helpers","","","Whether this ExtraInfoRecord contains no data","","If the record contains a list of item categories, return …","","","Returns the argument unchanged.","Read the record header from the given byte array","","Calls <code>U::from(self)</code>.","Write the record header to a new <code>Vec&lt;u8&gt;</code>","","","","","","","Representation of an item category","","","","","","Category ID","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Category name","Attempt to convert the category name to a <code>str</code>","Has the category been renamed?","The number of categories renamed by the user","","","","","","","","","","Helper trait for database record types","Return the record’s attributes, if known","Construct a record with the given parameters","Construct a resource with the given parameters","Return the length of the record’s data, if known","Read the record header from the given byte array","Return the record’s name, if known","Palm database record headers","Return the resource id if the record is a resource","Write the record header to a new <code>Vec&lt;u8&gt;</code>","Return the unique id if the record is not a resource","Generic Palm database record header","","Attributes used for Palm Database Records (not Resources)","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Type representing a Palm OS timestamp","The number of seconds between the two Palm OS timestamp …","Return the timestamp as the seconds since the UNIX epoch","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Check if the given timestamp is using the “old Palm epoch…","Convert an “old Palm epoch” timestamp to a UNIX epoch …","Return the timestamp as a <code>strftime</code>-formatted string","","","","","","Convert a UNIX epoch timestamp to an “old Palm epoch” …"],"i":[2,0,0,0,0,0,2,2,3,31,32,33,3,31,32,33,3,3,3,3,3,3,31,32,33,3,3,0,3,0,3,3,31,32,33,3,2,31,32,33,3,0,0,3,3,3,31,32,33,3,31,32,33,3,31,32,33,3,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,34,24,24,0,24,24,34,24,34,24,24,24,34,24,24,34,24,24,24,24,24,0,0,25,27,25,27,27,25,25,27,25,27,27,27,27,25,27,25,27,25,27,27,27,25,27,25,25,25,27,27,25,27,25,27,25,27,25,27,0,35,35,35,35,35,35,0,35,35,35,0,28,0,28,28,12,28,12,28,12,12,12,28,12,28,28,28,28,12,12,12,12,28,12,28,12,12,28,28,12,28,28,28,12,28,12,28,12,28,12,28,12,28,28,36,36,37,36,37,37,37,36,0,0,29,29,29,29,29,29,29,29,29,29,29,0,0,29,29,29,29,29,29,0],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[]],[[[3,[[0,[4,2]]]],[3,[[0,[4,2]]]]],5],[[[3,[2]],6],7],[[[3,[2]],6],7],[[]],[[]],[[]],[[]],[[[9,[8]]],[[11,[[3,[2]],10]]]],0,0,0,[[[3,[2]],12,[9,[8]]],13],[[[3,[2]],[14,[8]],[9,[8]]],15],[[]],[[]],[[]],[[]],[[[9,[8]],16],5],[[[9,[8]],16],5],[[[9,[8]],16],5],[[[9,[8]],16],5],[[[3,[2]]],9],0,0,[[[3,[2]]],[[18,[[17,[8]]]]]],[[]],[[],19],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,[[]],[[]],[16,16],[[]],0,0,[16,[[11,[21,22]]]],[[16,16],5],[[16,6],7],[[16,6],7],[[]],[[[23,[[9,[8]]]]],[[11,[16,10]]]],[[]],0,0,0,[16,[[9,[8]]]],[16,[[11,[21,22]]]],0,0,0,[16,[[18,[[17,[8]]]]]],[[]],[[],19],[[],11],[[],11],0,[16,[[11,[21,22]]]],[[],20],0,0,0,0,0,[[]],[[]],0,[24,24],[[]],[[],5],[24,5],[[],[[26,[[17,[25]]]]]],[[24,24],5],[[24,6],7],[[]],[[16,[23,[[9,[8]]]]],[[11,[10]]]],[[16,[23,[[9,[8]]]]],[[11,[24,10]]]],[[]],[[],[[11,[[17,[8]],10]]]],[24,[[11,[[17,[8]],10]]]],[[]],[[],11],[[],11],[[],20],0,0,[[]],[[]],[[]],[[]],0,0,[25,25],[27,27],[[]],[[]],[27,5],[27,[[26,[[17,[25]]]]]],[[],27],[[25,25],5],[[27,27],5],[[25,6],7],[[27,6],7],[[]],[[]],[[16,[23,[[9,[8]]]]],[[11,[27,10]]]],[[16,[23,[[9,[8]]]]],[[11,[27,10]]]],[[]],[[]],0,[25,[[11,[21,22]]]],0,0,[27,[[11,[[17,[8]],10]]]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],20],[[],20],0,[[],[[26,[12]]]],[[12,13,13,[26,[13]]]],[[[14,[8]],15,13,[26,[13]]]],[[],[[26,[13]]]],[[16,[23,[[9,[8]]]]],[[11,[10]]]],[[],[[26,[21]]]],0,[[],[[26,[15]]]],[[],[[11,[[17,[8]],10]]]],[[],[[26,[13]]]],0,0,0,0,[28,[[26,[12]]]],[[]],[[]],[[]],[[]],0,0,[12,12],[28,28],[[]],[[]],[[12,13,13,[26,[13]]],28],[[[14,[8]],15,13,[26,[13]]],28],[28,[[26,[13]]]],[[],12],0,0,[[12,12],5],[[28,28],5],[[12,6],7],[[28,6],7],[8,12],[[]],[[]],[[16,[23,[[9,[8]]]]],[[11,[28,10]]]],[[]],[[]],[28,[[26,[21]]]],[28,[[26,[15]]]],0,[28,[[11,[[17,[8]],10]]]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],20],[[],20],[28,[[26,[13]]]],0,0,0,0,0,0,0,0,0,0,[29,30],[[]],[[]],[29,29],[[]],[[],29],[[29,29],5],[[29,6],7],[[29,6],7],[[]],[[]],[13,5],[13,30],[[29,21],19],[[]],[[],19],[[],11],[[],11],[[],20],[30,13]],"c":[],"p":[[8,"Clone"],[8,"DatabaseFormat"],[3,"PalmDatabase"],[8,"PartialEq"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"u8"],[15,"slice"],[3,"Error"],[4,"Result"],[3,"RecordAttributes"],[15,"u32"],[15,"array"],[15,"u16"],[3,"DatabaseHeader"],[3,"Vec"],[6,"Result"],[3,"String"],[3,"TypeId"],[15,"str"],[3,"Utf8Error"],[3,"Cursor"],[3,"NullExtraInfo"],[3,"ExtraInfoCategory"],[4,"Option"],[3,"AppInfoCategories"],[4,"PdbRecordHeader"],[3,"PalmTimestamp"],[15,"i32"],[3,"PrcDatabase"],[3,"PdbDatabase"],[3,"PdbWithCategoriesDatabase"],[8,"ExtraInfoRecord"],[8,"DatabaseRecord"],[13,"Record"],[13,"Resource"]]},\
"palmrs_sync":{"doc":"Support for Palm HotSync, with pluggable sync conduits","t":"NNNELLLLALLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLMMMMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLMMMMLLLLLLLLLLLLLLLLLL","n":["KeepDevice","KeepLocal","Merge","SyncMode","borrow","borrow_mut","clone","clone_into","conduit","default","eq","fmt","fmt","from","from_str","into","to_owned","to_string","try_from","try_into","type_id","ConduitHandler","ConduitRequirements","WithinConduit","WithinConduitConfig","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","conduit_config","conduit_name","conduit_name","config","databases","default","default","default","environment","eq","eq","eq","eq","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_env","from_env","into","into","into","into","make_argv","make_config_prefix","make_environment","new","new","new","path_device","path_device","path_local","path_local","popen","requirements","sync_mode","sync_mode","sync_version","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","with_databases"],"q":[[0,"palmrs_sync"],[21,"palmrs_sync::conduit"]],"d":["Prefer the data from the remote Palm OS device","Prefer the data from local storage","Perform a merge of the local and remote datasets","Sync mode","","","","","Sync conduit handling","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Conduit call handler","Container (with builder API) for sync conduit requirements","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,9,10,11,12,9,10,11,12,9,10,11,12,9,10,11,12,12,10,12,10,11,9,10,11,9,9,10,11,12,11,9,10,11,11,12,9,10,11,12,9,10,9,10,11,12,12,12,12,10,11,12,9,12,9,12,12,10,9,12,10,9,10,11,12,11,9,10,11,12,9,10,11,12,9,10,11,12,11],"f":[0,0,0,0,[[]],[[]],[1,1],[[]],0,[[],1],[[1,1],2],[[1,3],4],[[1,3],4],[[]],[5,[[6,[1]]]],[[]],[[]],[[],7],[[],6],[[],6],[[],8],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,9],[10,10],[11,11],[12,12],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],9],[[],10],[[],11],0,[[9,9],2],[[10,10],2],[[11,11],2],[[12,12],2],[11,11],[[9,3],4],[[10,3],4],[[11,3],4],[[11,3],4],[[12,3],4],[[]],[[]],[[]],[[]],[9,[[6,[13]]]],[10,[[6,[10,13]]]],[[]],[[]],[[]],[[]],[12,[[15,[14]]]],[12,14],[12,15],[[5,11],10],[[],11],[[5,1],12],0,0,0,0,[[12,16,16],[[18,[17]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[],7],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],8],[[],8],[[],8],[[],8],[[11,[19,[5]]],11]],"c":[],"p":[[4,"SyncMode"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[4,"Result"],[3,"String"],[3,"TypeId"],[3,"WithinConduitConfig"],[3,"WithinConduit"],[3,"ConduitRequirements"],[3,"ConduitHandler"],[3,"Error"],[3,"OsString"],[3,"Vec"],[4,"Redirection"],[3,"Popen"],[6,"Result"],[15,"slice"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
